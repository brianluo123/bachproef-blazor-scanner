@page "/shipment"
@using BachelorproefBlazorScanner.Domain.Scans
@using BachelorproefBlazorScanner.Client.Components
@inject IScanService ScanService
@using BlazorBarcodeScanner.ZXing.JS
@using System.Diagnostics

<PageTitle>Shipment</PageTitle>

<h1>Shipment</h1>

<EditForm Model="@scan" OnValidSubmit="CreateScanAsync">

    <!--Barcode-->
    <div class="form-group mb-2">
        <label>Scan a barcode</label>
        <div class="input-group">
            <InputText class="form-control" @bind-Value="scan.Barcode" />
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button" @onclick="OpenModal">Scan</button>
            </div>
        </div>
    </div>

    <!--Destination-->
    <div class="form-group mb-2">
        <label>Select a destination</label>
        <InputSelect class="form-control" @bind-Value="scan.Destination">
            <option selected="true" disabled="disabled">--select--</option>
            @foreach(var destination in destinations) {
                <option value="@destination">@destination</option>
            }
        </InputSelect>
    </div>

    <!--Zone-->
    <div class="form-group mb-2">
        <label>Choose a zone</label>
        <InputText class="form-control" @bind-Value="scan.Zone" />
    </div>

    <!--Submit button--> 
    <div class="buttons d-flex justify-content-end mt-3">
        <button class="btn btn-secondary" type="submit">OK</button>
    </div>
</EditForm>

<h5>Scanned barcodes</h5>
@if (scans == null) {
    <p>Loading...</p>
} else {
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Barcode</th>
                <th scope="col">Destination</th>
                <th scope="col">Zone</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var scan in scans) {
                <ScanItem Scan="scan" />
            }
        </tbody>
    </table>
}

@if (showModal) {
    <div class="modal fade show" style="display: block;" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Scan a barcode</h5>
                    <button type="button" class="close" @onclick="CloseModal">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <Scanner OnBarcodeReceived="ReceivedBarcodeText" />
                </div>
            </div>
        </div>
    </div>
}

@code {
    private IEnumerable<Scan>? scans;
    private Scan scan = new();
    private List<string> destinations = new();
    private bool showModal = false;

    protected override async Task OnInitializedAsync()
    {
        LoadDestinations();
        await GetScansAsync();
    }

    private async Task GetScansAsync()
    {
        scans = await ScanService.GetScansAsync();
    }

    private void LoadDestinations()
    {
        destinations.Add("Gent");
        destinations.Add("Antwerpen");
        destinations.Add("Brussel");
    }

    private async Task CreateScanAsync()
    {
        await ScanService.CreateScanAsync(scan);
        scan = new();
        await GetScansAsync();
    }

    private void ReceivedBarcodeText(BarcodeReceivedEventArgs args)
    {
        scan.Barcode = args.BarcodeText;
        CloseModal();
    }

    private void OpenModal()
    {
        showModal = true;
    }

    private void CloseModal()
    {
        showModal = false;
    }
}
